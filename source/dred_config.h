
// All config variables are defined in the section below. The pre-build tool will look at these variables and construct the main
// config struct based on their names and types.

// BEGIN CONFIG VARS
//
// cmdbar-padding-horz cmdbarPaddingX float 2
//   The amount of padding to apply to the command bar on the left and right sides.
//
// cmdbar-padding-vert cmdbarPaddingY float 2
//   The amount of padding to apply to the command bar on the top and bottom sides.
//
// test-var1 testVar1 bool true
// test-var2 testVar2 string "my test string"
// test-var3 testVar3 font system-font-ui
// test-var4 testVar4 image NULL
// test-var5 testVar5 color 0 128 255
//
// END CONFIG VARS

typedef struct
{
    // The main context that owns this config. This is set to the context that initialized the config object.
    dred_context* pDred;

    float uiScale;

    // THEME VARIABLES
    dred_font* pUIFont;

    drgui_color cmdbarBGColor;
    dred_font* pCmdbarTBFont;
    dred_font* pCmdbarMessageFont;

    drgui_color tabgroupBGColor;

    dred_font* pTextEditorFont;
    drgui_color textEditorBGColor;
    drgui_color textEditorActiveLineColor;

    dred_image* pImageCross;


    // The auto-generated variable declarations. You can find these in dred_autogenerated.h
    DRED_CONFIG_VARIABLE_DECLARATIONS

} dred_config;

typedef void (* dred_config_on_error_proc)(dred_config* pConfig, const char* configPath, const char* message, unsigned int line, void* pUserData);

bool dred_config_init(dred_config* pConfig, dred_context* pDred);
void dred_config_uninit(dred_config* pConfig);

// The pUserData argument of onError will be set to pConfig.
bool dred_config_load_file(dred_config* pConfig, const char* filePath, dred_config_on_error_proc onError, void* pUserData);

